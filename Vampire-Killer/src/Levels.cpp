#include "Levels.h"
#include <raylib.h>
#include <vector>

Levels::Levels() {}

AppStatus Levels::Initialise() {
	level = 1;
	return AppStatus::OK;
}

std::vector<int> Levels::getMap() {
	std::vector<int> map;
	switch (level)
	{
	case 1:
		map = {
		1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4,
		9, 10,11,12,9 ,10,11,12,9 ,10,11,12,9 ,10,11,12,
		17,18,19,20,17,18,19,20,17,18,19,20,17,18,19,20,
		23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,
		27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,
		31,32,33,34,5 ,6 ,21,22,31,6 ,31,7 ,8 ,6 ,31,7,
		35,36,40,41,13,14,35,14,35,14,35,34,16,14,35,14,
		46,47,42,43,47,47,48,47,48,47,48,47,47,47,46,47,
		49,49,44,45,50,49,49,49,49,49,49,49,50,49,49,49,
		60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
		};
		return map;
		break;
	case 2:
		map = {
		 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4
		,9, 10,11,12,9 ,10,11,12,9 ,10,11,12,9 ,10,11,12
		,17,18,19,20,17,18,19,20,17,18,19,20,17,18,19,20
		,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26
		,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30
		,31,32,33,34,5 ,6 ,21,22,31,6 ,31,7 ,8 ,6 ,31,7
		,35,36,40,41,13,14,35,14,35,14,35,34,16,14,35,14
		,46,47,42,43,47,47,48,47,48,47,48,47,47,47,46,47
		,49,49,44,45,50,49,49,49,49,49,49,49,50,49,49,49
		,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60
		,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
		};
		return map;
		break;
	case 3:
		map = {
		1 ,2 ,3 ,4 ,1 ,2 ,3 ,4 ,1 ,2 ,70,71,72,71,72,71,
		9 ,10,11,12,9 ,10,11,12,9 ,10,73,74,75,75,75,77,
		17,18,19,20,17,18,19,20,17,18,78,79,80,81,76,82,
		23,24,25,26,23,24,25,26,23,24,73,83,85,86,87,77,
		27,28,29,30,27,28,29,30,27,28,78,88,89,86,87,90,
		31,32,33,34,5 ,6 ,21,22,31,6 ,73,83,85,86,87,91,
		35,36,40,41,13,14,35,14,35,14,78,88,89,86,87,90,
		46,47,42,43,47,47,48,47,48,47,92,93,94,86,96,97,
		49,49,44,45,50,49,49,49,49,49,92,95,94,86,96,98,
		60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};
		return map;
		break;
	}
}

std::vector<int> Levels::getEnt() {
	std::vector<int> map;
	switch (level)
	{
	case 1:
		map = {
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0,142,0 ,0 ,0 ,0 ,0 ,0 ,0,142,0 ,0 ,0,
		0,103,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,101,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
		};
		return map;
		break;
	case 2:
		map = {
		 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,142 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,142 ,0 ,0 ,0,
		0 ,103,0,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,101 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
		};
		return map;
		break;
	case 3:
		map = {
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,142 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,103,0,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,
		0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
		};
		return map;
		break;
	}
}

posTp Levels::getTp() {
	posTp tp;
	switch (level)
	{
	case 1:
		tp.top = 0;
		tp.right = 2;
		tp.down = 0;
		tp.left = 0;
		return tp;
		break;
	case 2:
		tp.top = 0;
		tp.right = 3;
		tp.down = 0;
		tp.left = 1;
		return tp;
		break;
	case 3:
		tp.top = 0;
		tp.right = 0;
		tp.down = 0;
		tp.left = 2;
		return tp;
		break;
	}
}

void Levels::setLvl(int lvl) {
	level = lvl;
}
